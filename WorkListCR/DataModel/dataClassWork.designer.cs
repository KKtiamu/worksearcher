#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataModel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="workSearсher")]
	public partial class dataClassWorkDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcoobec(coobec instance);
    partial void Updatecoobec(coobec instance);
    partial void Deletecoobec(coobec instance);
    partial void Insertvzdelan(vzdelan instance);
    partial void Updatevzdelan(vzdelan instance);
    partial void Deletevzdelan(vzdelan instance);
    partial void Insertfile(file instance);
    partial void Updatefile(file instance);
    partial void Deletefile(file instance);
    partial void Insertobec(obec instance);
    partial void Updateobec(obec instance);
    partial void Deleteobec(obec instance);
    partial void Insertobor(obor instance);
    partial void Updateobor(obor instance);
    partial void Deleteobor(obor instance);
    partial void Insertokre(okre instance);
    partial void Updateokre(okre instance);
    partial void Deleteokre(okre instance);
    partial void Insertprof(prof instance);
    partial void Updateprof(prof instance);
    partial void Deleteprof(prof instance);
    partial void Insertsmeny(smeny instance);
    partial void Updatesmeny(smeny instance);
    partial void Deletesmeny(smeny instance);
    partial void InserturadPrace(uradPrace instance);
    partial void UpdateuradPrace(uradPrace instance);
    partial void DeleteuradPrace(uradPrace instance);
    partial void Insertjazyk(jazyk instance);
    partial void Updatejazyk(jazyk instance);
    partial void Deletejazyk(jazyk instance);
    partial void InserttypZamest(typZamest instance);
    partial void UpdatetypZamest(typZamest instance);
    partial void DeletetypZamest(typZamest instance);
    partial void InsertpracVztah(pracVztah instance);
    partial void UpdatepracVztah(pracVztah instance);
    partial void DeletepracVztah(pracVztah instance);
    partial void InsertVM(VM instance);
    partial void UpdateVM(VM instance);
    partial void DeleteVM(VM instance);
    #endregion
		
		public dataClassWorkDataContext() : 
				base(global::DataModel.Properties.Settings.Default.connectString, mappingSource)
		{
			OnCreated();
		}
		
		public dataClassWorkDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dataClassWorkDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dataClassWorkDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dataClassWorkDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<coobec> coobecs
		{
			get
			{
				return this.GetTable<coobec>();
			}
		}
		
		public System.Data.Linq.Table<vzdelan> vzdelans
		{
			get
			{
				return this.GetTable<vzdelan>();
			}
		}
		
		public System.Data.Linq.Table<file> files
		{
			get
			{
				return this.GetTable<file>();
			}
		}
		
		public System.Data.Linq.Table<obec> obecs
		{
			get
			{
				return this.GetTable<obec>();
			}
		}
		
		public System.Data.Linq.Table<obor> obors
		{
			get
			{
				return this.GetTable<obor>();
			}
		}
		
		public System.Data.Linq.Table<okre> okres
		{
			get
			{
				return this.GetTable<okre>();
			}
		}
		
		public System.Data.Linq.Table<prof> profs
		{
			get
			{
				return this.GetTable<prof>();
			}
		}
		
		public System.Data.Linq.Table<smeny> smenies
		{
			get
			{
				return this.GetTable<smeny>();
			}
		}
		
		public System.Data.Linq.Table<uradPrace> uradPraces
		{
			get
			{
				return this.GetTable<uradPrace>();
			}
		}
		
		public System.Data.Linq.Table<jazyk> jazyks
		{
			get
			{
				return this.GetTable<jazyk>();
			}
		}
		
		public System.Data.Linq.Table<typZamest> typZamests
		{
			get
			{
				return this.GetTable<typZamest>();
			}
		}
		
		public System.Data.Linq.Table<pracVztah> pracVztahs
		{
			get
			{
				return this.GetTable<pracVztah>();
			}
		}
		
		public System.Data.Linq.Table<VM> VMs
		{
			get
			{
				return this.GetTable<VM>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.coobec")]
	public partial class coobec : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _psc;
		
		private int _idObec;
		
		private EntitySet<VM> _VMs;
		
		private EntityRef<obec> _obec;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpscChanging(string value);
    partial void OnpscChanged();
    partial void OnidObecChanging(int value);
    partial void OnidObecChanged();
    #endregion
		
		public coobec()
		{
			this._VMs = new EntitySet<VM>(new Action<VM>(this.attach_VMs), new Action<VM>(this.detach_VMs));
			this._obec = default(EntityRef<obec>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_psc", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string psc
		{
			get
			{
				return this._psc;
			}
			set
			{
				if ((this._psc != value))
				{
					this.OnpscChanging(value);
					this.SendPropertyChanging();
					this._psc = value;
					this.SendPropertyChanged("psc");
					this.OnpscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idObec", DbType="Int NOT NULL")]
		public int idObec
		{
			get
			{
				return this._idObec;
			}
			set
			{
				if ((this._idObec != value))
				{
					if (this._obec.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidObecChanging(value);
					this.SendPropertyChanging();
					this._idObec = value;
					this.SendPropertyChanged("idObec");
					this.OnidObecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="coobec_VM", Storage="_VMs", ThisKey="id", OtherKey="idObce")]
		public EntitySet<VM> VMs
		{
			get
			{
				return this._VMs;
			}
			set
			{
				this._VMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="obec_coobec", Storage="_obec", ThisKey="idObec", OtherKey="id", IsForeignKey=true)]
		public obec obec
		{
			get
			{
				return this._obec.Entity;
			}
			set
			{
				obec previousValue = this._obec.Entity;
				if (((previousValue != value) 
							|| (this._obec.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._obec.Entity = null;
						previousValue.coobecs.Remove(this);
					}
					this._obec.Entity = value;
					if ((value != null))
					{
						value.coobecs.Add(this);
						this._idObec = value.id;
					}
					else
					{
						this._idObec = default(int);
					}
					this.SendPropertyChanged("obec");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VMs(VM entity)
		{
			this.SendPropertyChanging();
			entity.coobec = this;
		}
		
		private void detach_VMs(VM entity)
		{
			this.SendPropertyChanging();
			entity.coobec = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vzdelan")]
	public partial class vzdelan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _kodUP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnkodUPChanging(string value);
    partial void OnkodUPChanged();
    #endregion
		
		public vzdelan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kodUP", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string kodUP
		{
			get
			{
				return this._kodUP;
			}
			set
			{
				if ((this._kodUP != value))
				{
					this.OnkodUPChanging(value);
					this.SendPropertyChanging();
					this._kodUP = value;
					this.SendPropertyChanged("kodUP");
					this.OnkodUPChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.files")]
	public partial class file : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public file()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.obec")]
	public partial class obec : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _idOkres;
		
		private EntitySet<coobec> _coobecs;
		
		private EntityRef<okre> _okre;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnidOkresChanging(int value);
    partial void OnidOkresChanged();
    #endregion
		
		public obec()
		{
			this._coobecs = new EntitySet<coobec>(new Action<coobec>(this.attach_coobecs), new Action<coobec>(this.detach_coobecs));
			this._okre = default(EntityRef<okre>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOkres", DbType="Int NOT NULL")]
		public int idOkres
		{
			get
			{
				return this._idOkres;
			}
			set
			{
				if ((this._idOkres != value))
				{
					if (this._okre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidOkresChanging(value);
					this.SendPropertyChanging();
					this._idOkres = value;
					this.SendPropertyChanged("idOkres");
					this.OnidOkresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="obec_coobec", Storage="_coobecs", ThisKey="id", OtherKey="idObec")]
		public EntitySet<coobec> coobecs
		{
			get
			{
				return this._coobecs;
			}
			set
			{
				this._coobecs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="okre_obec", Storage="_okre", ThisKey="idOkres", OtherKey="id", IsForeignKey=true)]
		public okre okre
		{
			get
			{
				return this._okre.Entity;
			}
			set
			{
				okre previousValue = this._okre.Entity;
				if (((previousValue != value) 
							|| (this._okre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._okre.Entity = null;
						previousValue.obecs.Remove(this);
					}
					this._okre.Entity = value;
					if ((value != null))
					{
						value.obecs.Add(this);
						this._idOkres = value.id;
					}
					else
					{
						this._idOkres = default(int);
					}
					this.SendPropertyChanged("okre");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_coobecs(coobec entity)
		{
			this.SendPropertyChanging();
			entity.obec = this;
		}
		
		private void detach_coobecs(coobec entity)
		{
			this.SendPropertyChanging();
			entity.obec = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.obor")]
	public partial class obor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _kodUp;
		
		private EntitySet<prof> _profs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnkodUpChanging(string value);
    partial void OnkodUpChanged();
    #endregion
		
		public obor()
		{
			this._profs = new EntitySet<prof>(new Action<prof>(this.attach_profs), new Action<prof>(this.detach_profs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kodUp", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string kodUp
		{
			get
			{
				return this._kodUp;
			}
			set
			{
				if ((this._kodUp != value))
				{
					this.OnkodUpChanging(value);
					this.SendPropertyChanging();
					this._kodUp = value;
					this.SendPropertyChanged("kodUp");
					this.OnkodUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="obor_prof", Storage="_profs", ThisKey="id", OtherKey="idObor")]
		public EntitySet<prof> profs
		{
			get
			{
				return this._profs;
			}
			set
			{
				this._profs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_profs(prof entity)
		{
			this.SendPropertyChanging();
			entity.obor = this;
		}
		
		private void detach_profs(prof entity)
		{
			this.SendPropertyChanging();
			entity.obor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.okres")]
	public partial class okre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _kodUP;
		
		private EntitySet<obec> _obecs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnkodUPChanging(string value);
    partial void OnkodUPChanged();
    #endregion
		
		public okre()
		{
			this._obecs = new EntitySet<obec>(new Action<obec>(this.attach_obecs), new Action<obec>(this.detach_obecs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kodUP", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string kodUP
		{
			get
			{
				return this._kodUP;
			}
			set
			{
				if ((this._kodUP != value))
				{
					this.OnkodUPChanging(value);
					this.SendPropertyChanging();
					this._kodUP = value;
					this.SendPropertyChanged("kodUP");
					this.OnkodUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="okre_obec", Storage="_obecs", ThisKey="id", OtherKey="idOkres")]
		public EntitySet<obec> obecs
		{
			get
			{
				return this._obecs;
			}
			set
			{
				this._obecs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_obecs(obec entity)
		{
			this.SendPropertyChanging();
			entity.okre = this;
		}
		
		private void detach_obecs(obec entity)
		{
			this.SendPropertyChanging();
			entity.okre = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.prof")]
	public partial class prof : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _kodUP;
		
		private int _idObor;
		
		private EntitySet<VM> _VMs;
		
		private EntityRef<obor> _obor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnkodUPChanging(string value);
    partial void OnkodUPChanged();
    partial void OnidOborChanging(int value);
    partial void OnidOborChanged();
    #endregion
		
		public prof()
		{
			this._VMs = new EntitySet<VM>(new Action<VM>(this.attach_VMs), new Action<VM>(this.detach_VMs));
			this._obor = default(EntityRef<obor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kodUP", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string kodUP
		{
			get
			{
				return this._kodUP;
			}
			set
			{
				if ((this._kodUP != value))
				{
					this.OnkodUPChanging(value);
					this.SendPropertyChanging();
					this._kodUP = value;
					this.SendPropertyChanged("kodUP");
					this.OnkodUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idObor", DbType="Int NOT NULL")]
		public int idObor
		{
			get
			{
				return this._idObor;
			}
			set
			{
				if ((this._idObor != value))
				{
					if (this._obor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidOborChanging(value);
					this.SendPropertyChanging();
					this._idObor = value;
					this.SendPropertyChanged("idObor");
					this.OnidOborChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="prof_VM", Storage="_VMs", ThisKey="id", OtherKey="idProf")]
		public EntitySet<VM> VMs
		{
			get
			{
				return this._VMs;
			}
			set
			{
				this._VMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="obor_prof", Storage="_obor", ThisKey="idObor", OtherKey="id", IsForeignKey=true)]
		public obor obor
		{
			get
			{
				return this._obor.Entity;
			}
			set
			{
				obor previousValue = this._obor.Entity;
				if (((previousValue != value) 
							|| (this._obor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._obor.Entity = null;
						previousValue.profs.Remove(this);
					}
					this._obor.Entity = value;
					if ((value != null))
					{
						value.profs.Add(this);
						this._idObor = value.id;
					}
					else
					{
						this._idObor = default(int);
					}
					this.SendPropertyChanged("obor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VMs(VM entity)
		{
			this.SendPropertyChanging();
			entity.prof = this;
		}
		
		private void detach_VMs(VM entity)
		{
			this.SendPropertyChanging();
			entity.prof = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.smeny")]
	public partial class smeny : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _kodUP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnkodUPChanging(string value);
    partial void OnkodUPChanged();
    #endregion
		
		public smeny()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kodUP", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string kodUP
		{
			get
			{
				return this._kodUP;
			}
			set
			{
				if ((this._kodUP != value))
				{
					this.OnkodUPChanging(value);
					this.SendPropertyChanging();
					this._kodUP = value;
					this.SendPropertyChanged("kodUP");
					this.OnkodUPChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.uradPrace")]
	public partial class uradPrace : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _kodUP;
		
		private EntitySet<VM> _VMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnkodUPChanging(string value);
    partial void OnkodUPChanged();
    #endregion
		
		public uradPrace()
		{
			this._VMs = new EntitySet<VM>(new Action<VM>(this.attach_VMs), new Action<VM>(this.detach_VMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kodUP", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string kodUP
		{
			get
			{
				return this._kodUP;
			}
			set
			{
				if ((this._kodUP != value))
				{
					this.OnkodUPChanging(value);
					this.SendPropertyChanging();
					this._kodUP = value;
					this.SendPropertyChanged("kodUP");
					this.OnkodUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="uradPrace_VM", Storage="_VMs", ThisKey="id", OtherKey="idUP")]
		public EntitySet<VM> VMs
		{
			get
			{
				return this._VMs;
			}
			set
			{
				this._VMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VMs(VM entity)
		{
			this.SendPropertyChanging();
			entity.uradPrace = this;
		}
		
		private void detach_VMs(VM entity)
		{
			this.SendPropertyChanging();
			entity.uradPrace = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.jazyk")]
	public partial class jazyk : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _kodUP;
		
		private string _name;
		
		private string _uroven;
		
		private string _urovenId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnkodUPChanging(string value);
    partial void OnkodUPChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnurovenChanging(string value);
    partial void OnurovenChanged();
    partial void OnurovenIdChanging(string value);
    partial void OnurovenIdChanged();
    #endregion
		
		public jazyk()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kodUP", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string kodUP
		{
			get
			{
				return this._kodUP;
			}
			set
			{
				if ((this._kodUP != value))
				{
					this.OnkodUPChanging(value);
					this.SendPropertyChanging();
					this._kodUP = value;
					this.SendPropertyChanged("kodUP");
					this.OnkodUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uroven", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string uroven
		{
			get
			{
				return this._uroven;
			}
			set
			{
				if ((this._uroven != value))
				{
					this.OnurovenChanging(value);
					this.SendPropertyChanging();
					this._uroven = value;
					this.SendPropertyChanged("uroven");
					this.OnurovenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_urovenId", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string urovenId
		{
			get
			{
				return this._urovenId;
			}
			set
			{
				if ((this._urovenId != value))
				{
					this.OnurovenIdChanging(value);
					this.SendPropertyChanging();
					this._urovenId = value;
					this.SendPropertyChanged("urovenId");
					this.OnurovenIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.typZamest")]
	public partial class typZamest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _kod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnkodChanging(string value);
    partial void OnkodChanged();
    #endregion
		
		public typZamest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kod", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string kod
		{
			get
			{
				return this._kod;
			}
			set
			{
				if ((this._kod != value))
				{
					this.OnkodChanging(value);
					this.SendPropertyChanging();
					this._kod = value;
					this.SendPropertyChanged("kod");
					this.OnkodChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pracVztah")]
	public partial class pracVztah : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _kod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnkodChanging(string value);
    partial void OnkodChanged();
    #endregion
		
		public pracVztah()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kod", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string kod
		{
			get
			{
				return this._kod;
			}
			set
			{
				if ((this._kod != value))
				{
					this.OnkodChanging(value);
					this.SendPropertyChanging();
					this._kod = value;
					this.SendPropertyChanged("kod");
					this.OnkodChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VM")]
	public partial class VM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _kodUP;
		
		private int _idProf;
		
		private string _firma;
		
		private System.Nullable<int> _idSmena;
		
		private System.Nullable<int> _idVzdelani;
		
		private string _idPracVztah;
		
		private System.Nullable<int> _idObce;
		
		private string _kontakt;
		
		private System.Nullable<int> _mzdaOd;
		
		private System.Nullable<int> _mzdaDo;
		
		private System.Nullable<System.DateTime> _terminOd;
		
		private System.Nullable<System.DateTime> _terminDo;
		
		private string _idTyp;
		
		private int _idUP;
		
		private System.Nullable<int> _modryKarty;
		
		private System.Nullable<int> _zamestnKarty;
		
		private System.Nullable<System.DateTime> _dateAktual;
		
		private int _volnychMist;
		
		private string _idJazyka;
		
		private string _poznamka;
		
		private EntityRef<coobec> _coobec;
		
		private EntityRef<prof> _prof;
		
		private EntityRef<uradPrace> _uradPrace;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnkodUPChanging(string value);
    partial void OnkodUPChanged();
    partial void OnidProfChanging(int value);
    partial void OnidProfChanged();
    partial void OnfirmaChanging(string value);
    partial void OnfirmaChanged();
    partial void OnidSmenaChanging(System.Nullable<int> value);
    partial void OnidSmenaChanged();
    partial void OnidVzdelaniChanging(System.Nullable<int> value);
    partial void OnidVzdelaniChanged();
    partial void OnidPracVztahChanging(string value);
    partial void OnidPracVztahChanged();
    partial void OnidObceChanging(System.Nullable<int> value);
    partial void OnidObceChanged();
    partial void OnkontaktChanging(string value);
    partial void OnkontaktChanged();
    partial void OnmzdaOdChanging(System.Nullable<int> value);
    partial void OnmzdaOdChanged();
    partial void OnmzdaDoChanging(System.Nullable<int> value);
    partial void OnmzdaDoChanged();
    partial void OnterminOdChanging(System.Nullable<System.DateTime> value);
    partial void OnterminOdChanged();
    partial void OnterminDoChanging(System.Nullable<System.DateTime> value);
    partial void OnterminDoChanged();
    partial void OnidTypChanging(string value);
    partial void OnidTypChanged();
    partial void OnidUPChanging(int value);
    partial void OnidUPChanged();
    partial void OnmodryKartyChanging(System.Nullable<int> value);
    partial void OnmodryKartyChanged();
    partial void OnzamestnKartyChanging(System.Nullable<int> value);
    partial void OnzamestnKartyChanged();
    partial void OndateAktualChanging(System.Nullable<System.DateTime> value);
    partial void OndateAktualChanged();
    partial void OnvolnychMistChanging(int value);
    partial void OnvolnychMistChanged();
    partial void OnidJazykaChanging(string value);
    partial void OnidJazykaChanged();
    partial void OnpoznamkaChanging(string value);
    partial void OnpoznamkaChanged();
    #endregion
		
		public VM()
		{
			this._coobec = default(EntityRef<coobec>);
			this._prof = default(EntityRef<prof>);
			this._uradPrace = default(EntityRef<uradPrace>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kodUP", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string kodUP
		{
			get
			{
				return this._kodUP;
			}
			set
			{
				if ((this._kodUP != value))
				{
					this.OnkodUPChanging(value);
					this.SendPropertyChanging();
					this._kodUP = value;
					this.SendPropertyChanged("kodUP");
					this.OnkodUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProf", DbType="Int NOT NULL")]
		public int idProf
		{
			get
			{
				return this._idProf;
			}
			set
			{
				if ((this._idProf != value))
				{
					if (this._prof.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProfChanging(value);
					this.SendPropertyChanging();
					this._idProf = value;
					this.SendPropertyChanged("idProf");
					this.OnidProfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firma", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string firma
		{
			get
			{
				return this._firma;
			}
			set
			{
				if ((this._firma != value))
				{
					this.OnfirmaChanging(value);
					this.SendPropertyChanging();
					this._firma = value;
					this.SendPropertyChanged("firma");
					this.OnfirmaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSmena", DbType="Int")]
		public System.Nullable<int> idSmena
		{
			get
			{
				return this._idSmena;
			}
			set
			{
				if ((this._idSmena != value))
				{
					this.OnidSmenaChanging(value);
					this.SendPropertyChanging();
					this._idSmena = value;
					this.SendPropertyChanged("idSmena");
					this.OnidSmenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idVzdelani", DbType="Int")]
		public System.Nullable<int> idVzdelani
		{
			get
			{
				return this._idVzdelani;
			}
			set
			{
				if ((this._idVzdelani != value))
				{
					this.OnidVzdelaniChanging(value);
					this.SendPropertyChanging();
					this._idVzdelani = value;
					this.SendPropertyChanged("idVzdelani");
					this.OnidVzdelaniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPracVztah", DbType="NVarChar(50)")]
		public string idPracVztah
		{
			get
			{
				return this._idPracVztah;
			}
			set
			{
				if ((this._idPracVztah != value))
				{
					this.OnidPracVztahChanging(value);
					this.SendPropertyChanging();
					this._idPracVztah = value;
					this.SendPropertyChanged("idPracVztah");
					this.OnidPracVztahChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idObce", DbType="Int")]
		public System.Nullable<int> idObce
		{
			get
			{
				return this._idObce;
			}
			set
			{
				if ((this._idObce != value))
				{
					if (this._coobec.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidObceChanging(value);
					this.SendPropertyChanging();
					this._idObce = value;
					this.SendPropertyChanged("idObce");
					this.OnidObceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kontakt", DbType="NVarChar(250)")]
		public string kontakt
		{
			get
			{
				return this._kontakt;
			}
			set
			{
				if ((this._kontakt != value))
				{
					this.OnkontaktChanging(value);
					this.SendPropertyChanging();
					this._kontakt = value;
					this.SendPropertyChanged("kontakt");
					this.OnkontaktChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mzdaOd", DbType="Int")]
		public System.Nullable<int> mzdaOd
		{
			get
			{
				return this._mzdaOd;
			}
			set
			{
				if ((this._mzdaOd != value))
				{
					this.OnmzdaOdChanging(value);
					this.SendPropertyChanging();
					this._mzdaOd = value;
					this.SendPropertyChanged("mzdaOd");
					this.OnmzdaOdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mzdaDo", DbType="Int")]
		public System.Nullable<int> mzdaDo
		{
			get
			{
				return this._mzdaDo;
			}
			set
			{
				if ((this._mzdaDo != value))
				{
					this.OnmzdaDoChanging(value);
					this.SendPropertyChanging();
					this._mzdaDo = value;
					this.SendPropertyChanged("mzdaDo");
					this.OnmzdaDoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_terminOd", DbType="Date")]
		public System.Nullable<System.DateTime> terminOd
		{
			get
			{
				return this._terminOd;
			}
			set
			{
				if ((this._terminOd != value))
				{
					this.OnterminOdChanging(value);
					this.SendPropertyChanging();
					this._terminOd = value;
					this.SendPropertyChanged("terminOd");
					this.OnterminOdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_terminDo", DbType="Date")]
		public System.Nullable<System.DateTime> terminDo
		{
			get
			{
				return this._terminDo;
			}
			set
			{
				if ((this._terminDo != value))
				{
					this.OnterminDoChanging(value);
					this.SendPropertyChanging();
					this._terminDo = value;
					this.SendPropertyChanged("terminDo");
					this.OnterminDoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTyp", DbType="NVarChar(50)")]
		public string idTyp
		{
			get
			{
				return this._idTyp;
			}
			set
			{
				if ((this._idTyp != value))
				{
					this.OnidTypChanging(value);
					this.SendPropertyChanging();
					this._idTyp = value;
					this.SendPropertyChanged("idTyp");
					this.OnidTypChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUP", DbType="Int NOT NULL")]
		public int idUP
		{
			get
			{
				return this._idUP;
			}
			set
			{
				if ((this._idUP != value))
				{
					if (this._uradPrace.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUPChanging(value);
					this.SendPropertyChanging();
					this._idUP = value;
					this.SendPropertyChanged("idUP");
					this.OnidUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modryKarty", DbType="Int")]
		public System.Nullable<int> modryKarty
		{
			get
			{
				return this._modryKarty;
			}
			set
			{
				if ((this._modryKarty != value))
				{
					this.OnmodryKartyChanging(value);
					this.SendPropertyChanging();
					this._modryKarty = value;
					this.SendPropertyChanged("modryKarty");
					this.OnmodryKartyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zamestnKarty", DbType="Int")]
		public System.Nullable<int> zamestnKarty
		{
			get
			{
				return this._zamestnKarty;
			}
			set
			{
				if ((this._zamestnKarty != value))
				{
					this.OnzamestnKartyChanging(value);
					this.SendPropertyChanging();
					this._zamestnKarty = value;
					this.SendPropertyChanged("zamestnKarty");
					this.OnzamestnKartyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateAktual", DbType="Date")]
		public System.Nullable<System.DateTime> dateAktual
		{
			get
			{
				return this._dateAktual;
			}
			set
			{
				if ((this._dateAktual != value))
				{
					this.OndateAktualChanging(value);
					this.SendPropertyChanging();
					this._dateAktual = value;
					this.SendPropertyChanged("dateAktual");
					this.OndateAktualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_volnychMist", DbType="Int NOT NULL")]
		public int volnychMist
		{
			get
			{
				return this._volnychMist;
			}
			set
			{
				if ((this._volnychMist != value))
				{
					this.OnvolnychMistChanging(value);
					this.SendPropertyChanging();
					this._volnychMist = value;
					this.SendPropertyChanged("volnychMist");
					this.OnvolnychMistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idJazyka", DbType="NVarChar(50)")]
		public string idJazyka
		{
			get
			{
				return this._idJazyka;
			}
			set
			{
				if ((this._idJazyka != value))
				{
					this.OnidJazykaChanging(value);
					this.SendPropertyChanging();
					this._idJazyka = value;
					this.SendPropertyChanged("idJazyka");
					this.OnidJazykaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_poznamka", DbType="NVarChar(MAX)")]
		public string poznamka
		{
			get
			{
				return this._poznamka;
			}
			set
			{
				if ((this._poznamka != value))
				{
					this.OnpoznamkaChanging(value);
					this.SendPropertyChanging();
					this._poznamka = value;
					this.SendPropertyChanged("poznamka");
					this.OnpoznamkaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="coobec_VM", Storage="_coobec", ThisKey="idObce", OtherKey="id", IsForeignKey=true)]
		public coobec coobec
		{
			get
			{
				return this._coobec.Entity;
			}
			set
			{
				coobec previousValue = this._coobec.Entity;
				if (((previousValue != value) 
							|| (this._coobec.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._coobec.Entity = null;
						previousValue.VMs.Remove(this);
					}
					this._coobec.Entity = value;
					if ((value != null))
					{
						value.VMs.Add(this);
						this._idObce = value.id;
					}
					else
					{
						this._idObce = default(Nullable<int>);
					}
					this.SendPropertyChanged("coobec");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="prof_VM", Storage="_prof", ThisKey="idProf", OtherKey="id", IsForeignKey=true)]
		public prof prof
		{
			get
			{
				return this._prof.Entity;
			}
			set
			{
				prof previousValue = this._prof.Entity;
				if (((previousValue != value) 
							|| (this._prof.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._prof.Entity = null;
						previousValue.VMs.Remove(this);
					}
					this._prof.Entity = value;
					if ((value != null))
					{
						value.VMs.Add(this);
						this._idProf = value.id;
					}
					else
					{
						this._idProf = default(int);
					}
					this.SendPropertyChanged("prof");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="uradPrace_VM", Storage="_uradPrace", ThisKey="idUP", OtherKey="id", IsForeignKey=true)]
		public uradPrace uradPrace
		{
			get
			{
				return this._uradPrace.Entity;
			}
			set
			{
				uradPrace previousValue = this._uradPrace.Entity;
				if (((previousValue != value) 
							|| (this._uradPrace.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._uradPrace.Entity = null;
						previousValue.VMs.Remove(this);
					}
					this._uradPrace.Entity = value;
					if ((value != null))
					{
						value.VMs.Add(this);
						this._idUP = value.id;
					}
					else
					{
						this._idUP = default(int);
					}
					this.SendPropertyChanged("uradPrace");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
